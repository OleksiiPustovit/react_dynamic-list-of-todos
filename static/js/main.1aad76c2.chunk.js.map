{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","selectedTodo","selectedTodoId","handleReset","className","map","id","title","completed","classNames","type","onClick","handleSelect","TodoFilter","value","setValue","text","setText","onChange","event","currentTarget","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoId","useState","user","setUser","todoOpen","setTodoOpen","currentTodo","find","todo","useEffect","userId","response","href","email","name","checkTitle","filterByText","toLowerCase","includes","App","setTodos","setTodoId","loader","setLoader","filterByValue","setFilterByValue","setFilterByText","fetchTodos","a","filteredTodos","filter","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0FCUCC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,aACAC,EACI,EADJA,eAMMC,EAAc,WAClBF,EAAa,IAGf,OACE,wBAAOG,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UAAd,OACT,qBACE,UAAQ,OAERJ,UAAU,GAHZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,eAAd,SACGI,GACC,sBACEJ,UAAU,OACV,UAAQ,gBAFV,SAIE,mBAAGA,UAAU,qBAInB,oBACEA,UAAU,2BADZ,SAGE,mBACEA,UAAWK,IAAW,CACpB,mBAAoBD,EACpB,mBAAoBA,IAHxB,SAMGD,MAGL,oBACEH,UAAU,8BADZ,SAGE,wBACEM,KAAK,SACLN,UAAU,SACV,UAAQ,eACRO,QAAST,IAAmBI,EACxBH,EACA,kBA9DG,SAACG,GACpBL,EAAaK,GA6DSM,CAAaN,IANzB,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWK,IAAW,CACpB,mBAAoBP,IAAmBI,EACvC,aAAcJ,IAAmBI,cAzCtCA,a,SD1CLR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEUL,IAAMe,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,KACAC,EACI,EADJA,QAWA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRU,MAAOA,EACPI,SAhBgB,SAACC,GACzBJ,EAASI,EAAMC,cAAcN,QAYvB,UAKE,wBAAQA,MAAOhB,EAAWuB,IAA1B,iBACA,wBAAQP,MAAOhB,EAAWwB,OAA1B,oBACA,wBAAQR,MAAOhB,EAAWyB,UAA1B,8BAIN,oBAAGnB,UAAU,qDAAb,UACE,uBACEM,KAAK,OACL,UAAQ,cACRN,UAAU,QACVoB,YAAY,YACZV,MAAOE,EACPE,SA3BiB,SAACC,GAExBF,EAAQE,EAAMC,cAAcN,UA2BxB,sBAAMV,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAEf,sBACEA,UAAU,gBACVqB,MAAO,CAAEC,cAAe,OAF1B,SAIY,KAATV,GACC,mCACE,wBACEN,KAAK,SACL,UAAQ,oBACRN,UAAU,SACVO,QAAS,kBAAMM,EAAQ,KACvB,aAAW,kCC5DdU,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICTMC,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,OACAxC,EAEI,EAFJA,MACAC,EACI,EADJA,aAEA,EAAwBwC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAc9C,EAAM+C,MAAK,SAAAC,GAAI,OAAIA,EAAK1C,KAAOkC,KASnD,OAPAS,qBAAU,WDEW,IAACC,ECDhBJ,IDCgBI,ECAVJ,EAAYI,ODAiBtB,EAAG,iBAAiBsB,KCCtDf,MAAK,SAAAgB,GAAQ,OAAIR,EAAQQ,QAE7B,KAEc,IAAbP,EACK,KAIP,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYoC,KAGZ,wBACE9B,KAAK,SACLN,UAAU,SACV,UAAQ,cACR,aAAW,QACXO,QAAS,WACPkC,GAAY,GACZ5C,EAAa,SAKnB,sBAAKG,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACG0C,QADH,IACGA,OADH,EACGA,EAAavC,QAGhB,oBAAGH,UAAU,QAAQ,UAAQ,aAA7B,UACG,OAAC0C,QAAD,IAACA,KAAatC,UAEV,wBAAQJ,UAAU,mBAAlB,kBADA,wBAAQA,UAAU,kBAAlB,qBAGJ,OAED,mBAAGgD,KAAI,iBAAYV,EAAKW,OAAxB,SACGX,EAAKY,gBApCd,cAAC,EAAD,QCxBKC,EAAa,SAAChD,EAAeiD,GACxC,OAAOjD,EAAMkD,cAAcC,SAASF,EAAaC,gBAGtCE,EAAgB,WAC3B,MAA0BlB,mBAAiB,IAA3C,mBAAOzC,EAAP,KAAc4D,EAAd,KACA,EAA4BnB,mBAAS,GAArC,mBAAOD,EAAP,KAAeqB,EAAf,KACA,EAA4BpB,oBAAS,GAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAA0CtB,mBAAS3C,EAAWuB,KAA9D,mBAAO2C,EAAP,KAAsBC,EAAtB,KACA,EAAwCxB,mBAAS,IAAjD,mBAAOe,EAAP,KAAqBU,EAArB,KAEAjB,qBAAU,WACR,IAAMkB,EAAU,uCAAG,4BAAAC,EAAA,sEFJOxC,EAAY,UEInB,OACXuB,EADW,OAGjBY,GAAU,GACVH,EAAST,GAJQ,2CAAH,qDAOhBgB,MACC,IAEH,IAAME,EAAgBrE,EAAMsE,QAAO,YAA2B,IAAxB/D,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC3C,OAAQwD,GACN,KAAKlE,EAAWwB,OACd,OAAQd,GAAa+C,EAAWhD,EAAOiD,GAEzC,KAAK1D,EAAWyB,UACd,OAAOf,GAAa+C,EAAWhD,EAAOiD,GAExC,QACE,OAAOD,EAAWhD,EAAOiD,OAI/B,OACE,qCACE,qBAAKpD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOkD,EACPhD,KAAMwC,EACNzC,SAAUkD,EACVhD,QAASiD,MAIb,qBAAK9D,UAAU,QAAf,SACI0D,EACA,cAAC,EAAD,IAEA,cAAC,EAAD,CACE9D,MAAOqE,EACPnE,eAAgBsC,EAChBvC,aAAc,SAAC+C,GAAD,OAAUa,EAAUb,eAOlC,IAAXR,GACC,cAAC,EAAD,CACEA,OAAQA,EACRxC,MAAOA,EACPC,aAAc,SAAC+C,GAAD,OAAUa,EAAUb,UC/E5CuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1aad76c2.chunk.js","sourcesContent":["export enum FilterType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: (argument: number) => number | void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectedTodoId,\n}) => {\n  const handleSelect = (id: number) => {\n    selectedTodo(id);\n  };\n\n  const handleReset = () => {\n    selectedTodo(0);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }) => (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td\n              className=\"is-vcentered is=expanded\"\n            >\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td\n              className=\"has-text-right is-vcentered\"\n            >\n              <button\n                type=\"button\"\n                className=\"button\"\n                data-cy=\"selectButton\"\n                onClick={selectedTodoId === id\n                  ? handleReset\n                  : () => handleSelect(id)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames({\n                      'far fa-eye-slash': selectedTodoId === id,\n                      'far fa-eye': selectedTodoId !== id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { FilterType } from '../../types/Filter';\n\ntype Props = {\n  value: FilterType;\n  setValue: (argument: FilterType) => void;\n  text: string;\n  setText: (argument: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  setValue,\n  text,\n  setText,\n}) => {\n  const handleChangeValue = (event: ChangeEvent<HTMLSelectElement>) => {\n    setValue(event.currentTarget.value as FilterType);\n  };\n\n  const handleChangeText = (event:\n  ChangeEvent<HTMLInputElement>) => {\n    setText(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={handleChangeValue}\n          >\n            <option value={FilterType.All}>All</option>\n            <option value={FilterType.Active}>Active</option>\n            <option value={FilterType.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          type=\"text\"\n          data-cy=\"searchInput\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={text}\n          onChange={handleChangeText}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {text !== '' && (\n            <>\n              <button\n                type=\"button\"\n                data-cy=\"clearSearchButton\"\n                className=\"delete\"\n                onClick={() => setText('')}\n                aria-label=\"Clear search query\"\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectedTodo: (argument: number) => number | void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoId,\n  todos,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todoOpen, setTodoOpen] = useState(true);\n  const currentTodo = todos.find(todo => todo.id === todoId);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(response => setUser(response));\n    }\n  }, []);\n\n  if (todoOpen === false) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close\"\n              onClick={() => {\n                setTodoOpen(false);\n                selectedTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!currentTodo?.completed\n                ? (<strong className=\"has-text-danger\">Planned</strong>)\n                : (<strong className=\"has-text-success\">Done</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterType } from './types/Filter';\n\nexport const checkTitle = (title: string, filterByText: string) => {\n  return title.toLowerCase().includes(filterByText.toLowerCase());\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [loader, setLoader] = useState(true);\n  const [filterByValue, setFilterByValue] = useState(FilterType.All);\n  const [filterByText, setFilterByText] = useState('');\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      const response = await getTodos();\n\n      setLoader(false);\n      setTodos(response);\n    };\n\n    fetchTodos();\n  }, []);\n\n  const filteredTodos = todos.filter(({ title, completed }) => {\n    switch (filterByValue) {\n      case FilterType.Active:\n        return !completed && checkTitle(title, filterByText);\n\n      case FilterType.Completed:\n        return completed && checkTitle(title, filterByText);\n\n      default:\n        return checkTitle(title, filterByText);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={filterByValue}\n                text={filterByText}\n                setValue={setFilterByValue}\n                setText={setFilterByText}\n              />\n            </div>\n\n            <div className=\"block\">\n              { loader ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={todoId}\n                  selectedTodo={(todo) => setTodoId(todo)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId !== 0 && (\n        <TodoModal\n          todoId={todoId}\n          todos={todos}\n          selectedTodo={(todo) => setTodoId(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}